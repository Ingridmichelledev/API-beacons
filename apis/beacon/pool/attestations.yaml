get:
  operationId: getPoolAttestations
  summary: Get Attestations from operations pool
  description: Retrieves attestations known by the node but not necessarily incorporated into any block
  parameters:
    - name: slot
      in: query
      required: false
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Uint64'
    - name: committee_index
      in: query
      required: false
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Uint64'
  tags:
    - Beacon
  responses:
    "200":
      description: Successful response
      content:
        application/json:
          schema:
            title: GetPoolAttestationsResponse
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Attestation'
    "500":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/InternalError'

post:
  operationId: submitPoolAttestations
  summary: Submit Attestation object to node
  description: Submits Attestation object to node. If attestation passes all validation constraints, node MUST publish attestation on appropriate subnet.
  tags:
    - Beacon
    - ValidatorRequiredApi
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Attestation'
  responses:
    "200":
      description: Attestation is stored in pool and broadcast on appropriate subnet
    "400":
      description: "Invalid attestation"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
              - example:
                  code: 400
                  message: "Invalid attestation, it will never pass validation so it's rejected"
    "500":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/InternalError'
